package app

import (
	"fmt"
	"hammurabi-game/config"
	"hammurabi-game/utils"
	"log"
	"time"
)

// WeatherResponse ...
func WeatherResponse(cfg *config.App) string {
	r, err := GetCurrentWeather(cfg)
	if err != nil {
		log.Fatalf("error: %s", err)
		return ""
	}

	weather, icon := utils.GetWeatherIcon(r.Weather)

	return fmt.Sprintf(`
	–ì–æ—Ä–æ–¥ %v.
	–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç %v %v.
	–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ üå°%v –≥—Ä–∞–¥—É—Å–æ–≤ –¶–µ–ª—å—Å–∏—è.
	–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ üå°%v –≥—Ä–∞–¥—É—Å–æ–≤ –¶–µ–ª—å—Å–∏—è.
	–í–ª–∞–∂–Ω–æ—Å—Ç—å %v –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤.
	–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ %v –≥–ü–∞.
	üå¨–í–µ—Ç–µ—Ä %v. –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ %v –º/—Å.
	–í–æ—Å—Ö–æ–¥ %v
	–ó–∞–∫–∞—Ç %v`,
		r.Name,
		weather,
		icon,
		r.Main.Temp,
		r.Main.FeelsLike,
		r.Main.Humidity,
		r.Main.Pressure,
		utils.GetWindDirection(r.Wind.Deg),
		r.Wind.Speed,
		utils.FormatTime(time.Unix(int64(r.Sys.Sunrise+r.Timezone), 0)),
		utils.FormatTime(time.Unix(int64(r.Sys.Sunset+r.Timezone), 0)))
}
